{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ana\\xEA\\\\Desktop\\\\hooks\\\\src\\\\components\\\\Usuarios\\\\Usuarios.js\";\nimport React, { useState, useEffect } from 'react'; //useEffect quando atualiza os componentes mudando o valor, substitui o componentDidMount quando utlizar hooks\n\nimport AdicionarUsuario from '../AdicionarUsuario/AdicionarUsuario';\nimport Usuario from '../Usuario/Usuario'; //UTILIZANDO HOOKS\n\nfunction Usuarios() {\n  const [usuarios, setUsuarios] = useState([]);\n  useEffect(() => {\n    fetch('https://reqres.in/api/users').then(resposta => resposta.json()).then(dados => {\n      const usuarios = dados.data.map(usuario => ({\n        id: usuario.id,\n        nome: usuario.first_name,\n        sobrenome: usuario.last_name,\n        email: usuario.email\n      }));\n      setUsuarios(usuarios);\n    });\n  }, []); //array vazio informando que nao tem nenhuma dependencia externa para o useEffect\n\n  const adicionarUsuario = usuario => {\n    //const usuarios = [...this.state.usuarios, usuario]\n    //this.setState({ usuarios: usuarios })\n    setUsuarios(usuariosAtuais => [...usuariosAtuais, usuario]);\n  };\n\n  const removerUsuario = usuario => {\n    if (window.confirm(`Tem certeza que deseja remover \"${usuario.nome} ${usuario.sobrenome}\"?`)) {\n      fetch(`https://reqres.in/api/users/${usuario.id}`, {\n        method: 'DELETE'\n      }).then(resposta => {\n        if (resposta.ok) {\n          setUsuarios(usuarios.filter(x => x.id !== usuario.id));\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AdicionarUsuario, {\n    adicionarUsuario: adicionarUsuario,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), usuarios.map(usuario => /*#__PURE__*/React.createElement(Usuario, {\n    key: usuario.id,\n    usuario: usuario,\n    removerUsuario: () => removerUsuario(usuario),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  })));\n} //Sem HOOKS\n\n/*class Usuarios extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = { usuarios: [] }\n\n    this.adicionarUsuario = this.adicionarUsuario.bind(this)\n  }\n\n  adicionarUsuario(usuario) {\n    const usuarios = [...this.state.usuarios, usuario]\n    this.setState({ usuarios: usuarios })\n  }\n\n  removerUsuario(usuario) {\n    if (window.confirm(`Tem certeza que deseja remover \"${usuario.nome} ${usuario.sobrenome}\"?`)) {\n      fetch(`https://reqres.in/api/users/${usuario.id}`, {\n        method: 'DELETE'\n      })\n        .then(resposta => {\n          if (resposta.ok) {\n            let usuarios = this.state.usuarios\n            usuarios = usuarios.filter(x => x.id !== usuario.id)\n            this.setState({ usuarios: usuarios })\n          }\n        })\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://reqres.in/api/users')\n      .then(resposta => resposta.json())\n      .then(dados => {\n        const usuarios = dados.data.map(usuario => ({\n          id: usuario.id,\n          nome: usuario.first_name,\n          sobrenome: usuario.last_name,\n          email: usuario.email\n        }))\n\n        this.setState({ usuarios })\n      })\n  }\n\n  render() {\n    return (\n      <>\n        <AdicionarUsuario adicionarUsuario={this.adicionarUsuario} />\n\n        {this.state.usuarios.map(usuario => (\n          <Usuario key={usuario.id}\n            usuario={usuario}\n            removerUsuario={this.removerUsuario.bind(this, usuario)}\n          />\n        ))}\n      </>\n    )\n  }\n}*/\n\n\nexport default Usuarios;","map":{"version":3,"sources":["C:/Users/AnaÃª/Desktop/hooks/src/components/Usuarios/Usuarios.js"],"names":["React","useState","useEffect","AdicionarUsuario","Usuario","Usuarios","usuarios","setUsuarios","fetch","then","resposta","json","dados","data","map","usuario","id","nome","first_name","sobrenome","last_name","email","adicionarUsuario","usuariosAtuais","removerUsuario","window","confirm","method","ok","filter","x"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;;AACA,OAAOC,gBAAP,MAA6B,sCAA7B;AACA,OAAOC,OAAP,MAAoB,oBAApB,C,CAEA;;AAEA,SAASC,QAAT,GAAmB;AACjB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAK;AACbM,IAAAA,KAAK,CAAC,6BAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,KAAK,IAAI;AACb,YAAMN,QAAQ,GAAGM,KAAK,CAACC,IAAN,CAAWC,GAAX,CAAeC,OAAO,KAAK;AAC1CC,QAAAA,EAAE,EAAED,OAAO,CAACC,EAD8B;AAE1CC,QAAAA,IAAI,EAAEF,OAAO,CAACG,UAF4B;AAG1CC,QAAAA,SAAS,EAAEJ,OAAO,CAACK,SAHuB;AAI1CC,QAAAA,KAAK,EAAEN,OAAO,CAACM;AAJ2B,OAAL,CAAtB,CAAjB;AAOAd,MAAAA,WAAW,CAACD,QAAD,CAAX;AACD,KAXD;AAYD,GAbQ,EAaN,EAbM,CAAT,CAHiB,CAgBV;;AAEP,QAAMgB,gBAAgB,GAAIP,OAAD,IAAa;AACpC;AACA;AACAR,IAAAA,WAAW,CAACgB,cAAc,IAAI,CAAC,GAAGA,cAAJ,EAAoBR,OAApB,CAAnB,CAAX;AACD,GAJD;;AAMA,QAAMS,cAAc,GAAIT,OAAD,IAAa;AAClC,QAAIU,MAAM,CAACC,OAAP,CAAgB,mCAAkCX,OAAO,CAACE,IAAK,IAAGF,OAAO,CAACI,SAAU,IAApF,CAAJ,EAA8F;AAC5FX,MAAAA,KAAK,CAAE,+BAA8BO,OAAO,CAACC,EAAG,EAA3C,EAA8C;AACjDW,QAAAA,MAAM,EAAE;AADyC,OAA9C,CAAL,CAGGlB,IAHH,CAGQC,QAAQ,IAAI;AAChB,YAAIA,QAAQ,CAACkB,EAAb,EAAiB;AACfrB,UAAAA,WAAW,CAACD,QAAQ,CAACuB,MAAT,CAAgBC,CAAC,IAAIA,CAAC,CAACd,EAAF,KAASD,OAAO,CAACC,EAAtC,CAAD,CAAX;AACD;AACF,OAPH;AAQD;AACF,GAXD;;AAYA,sBACE,uDACE,oBAAC,gBAAD;AAAkB,IAAA,gBAAgB,EAAEM,gBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGGhB,QAAQ,CAACQ,GAAT,CAAaC,OAAO,iBACnB,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEA,OAAO,CAACC,EAAtB;AACE,IAAA,OAAO,EAAED,OADX;AAEE,IAAA,cAAc,EAAE,MAAMS,cAAc,CAACT,OAAD,CAFtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAHH,CADF;AAYD,C,CACD;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4DA,eAAeV,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\n//useEffect quando atualiza os componentes mudando o valor, substitui o componentDidMount quando utlizar hooks\nimport AdicionarUsuario from '../AdicionarUsuario/AdicionarUsuario'\nimport Usuario from '../Usuario/Usuario'\n\n//UTILIZANDO HOOKS\n\nfunction Usuarios(){\n  const [usuarios, setUsuarios] = useState([])\n\n  useEffect(() =>{\n    fetch('https://reqres.in/api/users')\n    .then(resposta => resposta.json())\n    .then(dados => {\n      const usuarios = dados.data.map(usuario => ({\n        id: usuario.id,\n        nome: usuario.first_name,\n        sobrenome: usuario.last_name,\n        email: usuario.email\n      }))\n\n      setUsuarios(usuarios)\n    })\n  }, []) //array vazio informando que nao tem nenhuma dependencia externa para o useEffect\n\n  const adicionarUsuario = (usuario) => {\n    //const usuarios = [...this.state.usuarios, usuario]\n    //this.setState({ usuarios: usuarios })\n    setUsuarios(usuariosAtuais => [...usuariosAtuais, usuario])\n  }\n\n  const removerUsuario = (usuario) => {\n    if (window.confirm(`Tem certeza que deseja remover \"${usuario.nome} ${usuario.sobrenome}\"?`)) {\n      fetch(`https://reqres.in/api/users/${usuario.id}`, {\n        method: 'DELETE'\n      })\n        .then(resposta => {\n          if (resposta.ok) {\n            setUsuarios(usuarios.filter(x => x.id !== usuario.id))\n          }\n        })\n    }\n  }\n  return (\n    <>\n      <AdicionarUsuario adicionarUsuario={adicionarUsuario} />\n\n      {usuarios.map(usuario => (\n        <Usuario key={usuario.id}\n          usuario={usuario}\n          removerUsuario={() => removerUsuario(usuario)}\n        />\n      ))}\n    </>\n  )\n}\n//Sem HOOKS\n/*class Usuarios extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = { usuarios: [] }\n\n    this.adicionarUsuario = this.adicionarUsuario.bind(this)\n  }\n\n  adicionarUsuario(usuario) {\n    const usuarios = [...this.state.usuarios, usuario]\n    this.setState({ usuarios: usuarios })\n  }\n\n  removerUsuario(usuario) {\n    if (window.confirm(`Tem certeza que deseja remover \"${usuario.nome} ${usuario.sobrenome}\"?`)) {\n      fetch(`https://reqres.in/api/users/${usuario.id}`, {\n        method: 'DELETE'\n      })\n        .then(resposta => {\n          if (resposta.ok) {\n            let usuarios = this.state.usuarios\n            usuarios = usuarios.filter(x => x.id !== usuario.id)\n            this.setState({ usuarios: usuarios })\n          }\n        })\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://reqres.in/api/users')\n      .then(resposta => resposta.json())\n      .then(dados => {\n        const usuarios = dados.data.map(usuario => ({\n          id: usuario.id,\n          nome: usuario.first_name,\n          sobrenome: usuario.last_name,\n          email: usuario.email\n        }))\n\n        this.setState({ usuarios })\n      })\n  }\n\n  render() {\n    return (\n      <>\n        <AdicionarUsuario adicionarUsuario={this.adicionarUsuario} />\n\n        {this.state.usuarios.map(usuario => (\n          <Usuario key={usuario.id}\n            usuario={usuario}\n            removerUsuario={this.removerUsuario.bind(this, usuario)}\n          />\n        ))}\n      </>\n    )\n  }\n}*/\n\nexport default Usuarios"]},"metadata":{},"sourceType":"module"}