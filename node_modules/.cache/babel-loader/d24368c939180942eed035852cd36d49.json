{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ana\\xEA\\\\Desktop\\\\hooks\\\\src\\\\components\\\\AdicionarUsuario\\\\AdicionarUsuario.js\";\nimport React, { useState } from 'react'; //useState serve para fazer o gerenciamento do state\n//use state retorna um array com duas posições 1- estado inicial(string) 2 - thispath com uma função\n\nimport './AdicionarUsuario.css'; //utilizando hooks\n\nfunction AdicionarUsuario(props) {\n  const [nome, setNome] = useState('');\n  const [sobrenome, setSobrenome] = useState('');\n  const [email, setEmail] = useState('');\n\n  const onSubmitHandler = event => {\n    event.preventDefault();\n    const usuario = {\n      nome: nome,\n      //como é o mesmo valor posso apenas escrever nome , sobrenome e email.\n      sobrenome: sobrenome,\n      email: email\n    };\n    fetch('https://reqres.in/api/users', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(usuario)\n    }).then(resposta => resposta.json()).then(dados => {\n      setNome('');\n      setSobrenome('');\n      setEmail('');\n      props.adicionarUsuario(dados);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"AdicionarUsuario\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"Adicionar Usu\\xE1rio\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Linha\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Coluna\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \"Nome\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"nome\",\n    value: nome,\n    onChange: event => setNome(event.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Coluna\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"Sobrenome\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"sobrenome\",\n    value: sobrenome,\n    onChange: event => setSobrenome(event.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Linha\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Coluna\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: event => setEmail(event.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"Adicionar\")));\n} //sem utilizar hooks\n\n/*class AdicionarUsuario extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = INITIAL_STATE\n\n    this.onChangeHandler = this.onChangeHandler.bind(this)\n    this.onSubmitHandler = this.onSubmitHandler.bind(this)\n  }\n\n  onChangeHandler(event) {\n    const { name, value } = event.target\n    this.setState({ usuario: { ...this.state.usuario, [name]: value } })\n  }\n\n  onSubmitHandler(event) {\n    event.preventDefault()\n   \n    const usuario = this.state.usuario\n\n    fetch('https://reqres.in/api/users', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(usuario)\n    })\n      .then(resposta => resposta.json())\n      .then(dados => {\n        this.setState(INITIAL_STATE)\n        this.props.adicionarUsuario(dados)\n      })\n  }\n\n  render() {\n    return (\n      <div className=\"AdicionarUsuario\">\n        <h2>Adicionar Usuário</h2>\n        <form onSubmit={this.onSubmitHandler}>\n          <div className=\"Linha\">\n            <div className=\"Coluna\">\n              <label>Nome</label>\n              <input\n                type=\"text\"\n                name=\"nome\"\n                value={this.state.usuario.nome}\n                onChange={this.onChangeHandler}\n                required>\n              </input>\n            </div>\n            <div className=\"Coluna\">\n              <label>Sobrenome</label>\n              <input\n                type=\"text\"\n                name=\"sobrenome\"\n                value={this.state.usuario.sobrenome}\n                onChange={this.onChangeHandler}\n                required>\n              </input>\n            </div>\n          </div>\n          <div className=\"Linha\">\n            <div className=\"Coluna\">\n              <label>Email</label>\n              <input\n                type=\"email\"\n                name=\"email\"\n                value={this.state.usuario.email}\n                onChange={this.onChangeHandler}\n                required>\n              </input>\n            </div>\n          </div>\n          <button type=\"submit\">\n            Adicionar\n        </button>\n        </form>\n      </div>\n    )\n  }\n}*/\n\n\nexport default AdicionarUsuario;","map":{"version":3,"sources":["C:/Users/Anaê/Desktop/hooks/src/components/AdicionarUsuario/AdicionarUsuario.js"],"names":["React","useState","AdicionarUsuario","props","nome","setNome","sobrenome","setSobrenome","email","setEmail","onSubmitHandler","event","preventDefault","usuario","fetch","method","headers","body","JSON","stringify","then","resposta","json","dados","adicionarUsuario","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n//useState serve para fazer o gerenciamento do state\n//use state retorna um array com duas posições 1- estado inicial(string) 2 - thispath com uma função\nimport './AdicionarUsuario.css'\n\n//utilizando hooks\n\nfunction AdicionarUsuario(props){\n \n  const [nome, setNome] = useState('')\n  const [sobrenome, setSobrenome] = useState('')\n  const [email, setEmail] = useState('')\n\n  const onSubmitHandler = (event) => {\n    event.preventDefault()\n   \n    const usuario = { \n      nome: nome, //como é o mesmo valor posso apenas escrever nome , sobrenome e email.\n      sobrenome: sobrenome,\n      email: email\n    }\n\n    fetch('https://reqres.in/api/users', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(usuario)\n    })\n      .then(resposta => resposta.json())\n      .then(dados => {\n        setNome('');\n        setSobrenome('');\n        setEmail('');\n        props.adicionarUsuario(dados)\n      })\n  }\n  return (\n    <div className=\"AdicionarUsuario\">\n      <h2>Adicionar Usuário</h2>\n      <form onSubmit={onSubmitHandler}>\n        <div className=\"Linha\">\n          <div className=\"Coluna\">\n            <label>Nome</label>\n            <input\n              type=\"text\"\n              name=\"nome\"\n              value={nome}\n              onChange={event => setNome(event.target.value)}\n              required>\n            </input>\n          </div>\n          <div className=\"Coluna\">\n            <label>Sobrenome</label>\n            <input\n              type=\"text\"\n              name=\"sobrenome\"\n              value={sobrenome}\n              onChange={event => setSobrenome(event.target.value)}\n              required>\n            </input>\n          </div>\n        </div>\n        <div className=\"Linha\">\n          <div className=\"Coluna\">\n            <label>Email</label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={event => setEmail(event.target.value)}\n              required>\n            </input>\n          </div>\n        </div>\n        <button type=\"submit\">\n          Adicionar\n      </button>\n      </form>\n    </div>\n  )\n}\n\n//sem utilizar hooks\n/*class AdicionarUsuario extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = INITIAL_STATE\n\n    this.onChangeHandler = this.onChangeHandler.bind(this)\n    this.onSubmitHandler = this.onSubmitHandler.bind(this)\n  }\n\n  onChangeHandler(event) {\n    const { name, value } = event.target\n    this.setState({ usuario: { ...this.state.usuario, [name]: value } })\n  }\n\n  onSubmitHandler(event) {\n    event.preventDefault()\n   \n    const usuario = this.state.usuario\n\n    fetch('https://reqres.in/api/users', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(usuario)\n    })\n      .then(resposta => resposta.json())\n      .then(dados => {\n        this.setState(INITIAL_STATE)\n        this.props.adicionarUsuario(dados)\n      })\n  }\n\n  render() {\n    return (\n      <div className=\"AdicionarUsuario\">\n        <h2>Adicionar Usuário</h2>\n        <form onSubmit={this.onSubmitHandler}>\n          <div className=\"Linha\">\n            <div className=\"Coluna\">\n              <label>Nome</label>\n              <input\n                type=\"text\"\n                name=\"nome\"\n                value={this.state.usuario.nome}\n                onChange={this.onChangeHandler}\n                required>\n              </input>\n            </div>\n            <div className=\"Coluna\">\n              <label>Sobrenome</label>\n              <input\n                type=\"text\"\n                name=\"sobrenome\"\n                value={this.state.usuario.sobrenome}\n                onChange={this.onChangeHandler}\n                required>\n              </input>\n            </div>\n          </div>\n          <div className=\"Linha\">\n            <div className=\"Coluna\">\n              <label>Email</label>\n              <input\n                type=\"email\"\n                name=\"email\"\n                value={this.state.usuario.email}\n                onChange={this.onChangeHandler}\n                required>\n              </input>\n            </div>\n          </div>\n          <button type=\"submit\">\n            Adicionar\n        </button>\n        </form>\n      </div>\n    )\n  }\n}*/\n\nexport default AdicionarUsuario"]},"metadata":{},"sourceType":"module"}